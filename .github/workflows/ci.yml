name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    steps:
      #######################################################################################################
      ## Full test
      ##
      - uses: hendrikmuhs/ccache-action@v1.2
        if: github.event_name != 'release' && github.event_name != 'workflow_dispatch'
      - uses: Swatinem/rust-cache@v2
        if: github.event_name != 'release' && github.event_name != 'workflow_dispatch'
      - uses: taiki-e/install-action@v2
        with: { tool: just }
      - uses: actions/checkout@v4
        with: { submodules: 'recursive' }
      - name: Get latest CMake and Ninja
        uses: lukka/get-cmake@latest
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcurl4-openssl-dev \
            libuv1-dev \
            libjpeg-dev \
            libpng-dev \
            libglfw3-dev \
            libwebp-dev \
            libopengl0 \
            mesa-vulkan-drivers
      - name: Ensure this crate has not yet been published (on release)
        if: github.event_name == 'release'
        run: just check-if-published
      - run: RUST_BACKTRACE=1 just ci-test
#      - name: Check semver
#        uses: obi1kenobi/cargo-semver-checks-action@v2
#      #######################################################################################################
#      ## Test MSRV
#      ##
#      - name: Read MSRV
#        id: msrv
#        run: echo "value=$(sed -ne 's/rust-version *= *\"\(.*\)\"/\1/p' Cargo.toml)" >> $GITHUB_OUTPUT
#      - name: Install Rust
#        uses: dtolnay/rust-toolchain@stable
#        with:
#          toolchain: ${{ steps.msrv.outputs.value }}
#      - run: just ci-test-msrv
#      #######################################################################################################
#      ## Publish to crates.io
#      ##
#      - name: Publish to crates.io
#        if: startsWith(github.ref, 'refs/tags/')
#        run: cargo publish
#        env:
#          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
